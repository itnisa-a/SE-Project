{"ast":null,"code":"var _jsxFileName = \"/Users/thawanratsongsri/SE/myse/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Socket } from 'dgram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst app = express();\nconst Server = http.createServer(app);\nconst io = socketIo(Server);\nconst POST = 5000;\napp.use(express.static(__dirname + '/src'));\napp.get(\"/\", (req, res) => {\n  res.sendFile(__dirname + \"/massagsles.html\");\n});\nio.on(\"connrct\", socket => {\n  socket.on('newUser', name => {\n    let newUser = name;\n    console.log('${newUser} connect');\n    socket.on('disconnect', () => {\n      console.log('User disconnected');\n      io.emit('disconnected', '${newUser} disconnected');\n    });\n    socket.on('chet message', msg => {\n      io.emit('chat message', msg);\n    });\n  });\n});\nServer.listen(POST, () => {\n  console.log('Server running on port ${PORT}');\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Socket","jsxDEV","_jsxDEV","express","require","http","socketIo","app","Server","createServer","io","POST","use","static","__dirname","get","req","res","sendFile","on","socket","name","newUser","console","log","emit","msg","listen","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thawanratsongsri/SE/myse/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Socket } from 'dgram';\n\nconst express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\n\nconst app = express();\nconst Server = http.createServer(app);\nconst io = socketIo(Server);\n\nconst POST = 5000;\napp.use(express.static(__dirname +'/src'));\n\napp.get(\"/\" , (req,res) => {\n  res.sendFile(__dirname +\"/massagsles.html\");\n})\n\nio.on(\"connrct\",(socket)=>{\n  socket.on('newUser',(name) =>{\n    let newUser = name;\n    console.log('${newUser} connect' );\n\n    socket.on('disconnect',() =>{\n      console.log('User disconnected');\n      io.emit('disconnected','${newUser} disconnected');\n    })\n\n    socket.on('chet message',(msg)=>{\n      io.emit('chat message',msg);\n    })\n  })\n})\n\nServer.listen(POST,() => {\n  console.log('Server running on port ${PORT}');\n})\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAW,CAAC;AAErC,MAAMG,GAAG,GAAGJ,OAAO,EAAE;AACrB,MAAMK,MAAM,GAAGH,IAAI,CAACI,YAAY,CAACF,GAAG,CAAC;AACrC,MAAMG,EAAE,GAAGJ,QAAQ,CAACE,MAAM,CAAC;AAE3B,MAAMG,IAAI,GAAG,IAAI;AACjBJ,GAAG,CAACK,GAAG,CAACT,OAAO,CAACU,MAAM,CAACC,SAAS,GAAE,MAAM,CAAC,CAAC;AAE1CP,GAAG,CAACQ,GAAG,CAAC,GAAG,EAAG,CAACC,GAAG,EAACC,GAAG,KAAK;EACzBA,GAAG,CAACC,QAAQ,CAACJ,SAAS,GAAE,kBAAkB,CAAC;AAC7C,CAAC,CAAC;AAEFJ,EAAE,CAACS,EAAE,CAAC,SAAS,EAAEC,MAAM,IAAG;EACxBA,MAAM,CAACD,EAAE,CAAC,SAAS,EAAEE,IAAI,IAAI;IAC3B,IAAIC,OAAO,GAAGD,IAAI;IAClBE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE;IAElCJ,MAAM,CAACD,EAAE,CAAC,YAAY,EAAC,MAAK;MAC1BI,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCd,EAAE,CAACe,IAAI,CAAC,cAAc,EAAC,yBAAyB,CAAC;IACnD,CAAC,CAAC;IAEFL,MAAM,CAACD,EAAE,CAAC,cAAc,EAAEO,GAAG,IAAG;MAC9BhB,EAAE,CAACe,IAAI,CAAC,cAAc,EAACC,GAAG,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFlB,MAAM,CAACmB,MAAM,CAAChB,IAAI,EAAC,MAAM;EACvBY,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC;AACF,MAAMI,IAAI,GAAG/B,QAAQ,CAACgC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT9B,OAAA,CAACN,KAAK,CAACqC,UAAU;EAAAC,QAAA,eACfhC,OAAA,CAACJ,GAAG;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAvC,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}